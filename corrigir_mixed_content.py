#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para corrigir Mixed Content no WordPress
"""

import paramiko

def corrigir_mixed_content():
    """Corrige problemas de Mixed Content no WordPress"""
    
    print("üîß CORRIGINDO MIXED CONTENT NO WORDPRESS")
    print("=" * 45)
    
    # Configura√ß√µes SSH
    SSH_HOST = "46.202.90.62"
    SSH_PORT = 65002
    SSH_USER = "u715606397"
    SSH_PASSWORD = "]X9CC>t~ihWhdzNq"
    
    try:
        # Conecta via SSH
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        
        ssh.connect(
            hostname=SSH_HOST,
            port=SSH_PORT,
            username=SSH_USER,
            password=SSH_PASSWORD,
            timeout=30
        )
        
        print("‚úÖ Conectado ao servidor SSH")
        
        # 1. Atualiza wp-config.php para for√ßar HTTPS
        print("\nüîß Configurando HTTPS no wp-config.php...")
        
        wp_config_content = '''
# For√ßar HTTPS
define('FORCE_SSL_ADMIN', true);
define('FORCE_SSL', true);

# URLs do site
define('WP_HOME','https://gpreto.space');
define('WP_SITEURL','https://gpreto.space');

# Detectar proxy reverso
if (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && $_SERVER['HTTP_X_FORWARDED_PROTO'] === 'https') {
    $_SERVER['HTTPS'] = 'on';
}
'''
        
        # Adiciona configura√ß√µes ao wp-config.php
        stdin, stdout, stderr = ssh.exec_command(f'echo "{wp_config_content}" >> public_html/wp-config.php')
        print("‚úÖ Configura√ß√µes HTTPS adicionadas ao wp-config.php")
        
        # 2. Cria arquivo .htaccess para for√ßar HTTPS
        print("\nüîß Criando .htaccess para for√ßar HTTPS...")
        
        htaccess_content = '''# For√ßar HTTPS
RewriteEngine On
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Headers de seguran√ßa
<IfModule mod_headers.c>
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set X-Content-Type-Options nosniff
    Header always set X-Frame-Options DENY
    Header always set X-XSS-Protection "1; mode=block"
</IfModule>

# Permitir acesso √†s imagens
<Files "*.jpg">
    Order allow,deny
    Allow from all
</Files>

<Files "*.jpeg">
    Order allow,deny
    Allow from all
</Files>

<Files "*.png">
    Order allow,deny
    Allow from all
</Files>

<Files "*.gif">
    Order allow,deny
    Allow from all
</Files>
'''
        
        # Salva .htaccess
        stdin, stdout, stderr = ssh.exec_command(f'echo "{htaccess_content}" > public_html/.htaccess')
        print("‚úÖ Arquivo .htaccess atualizado")
        
        # 3. Corrige URLs no banco de dados (se necess√°rio)
        print("\nüîß Verificando URLs no banco de dados...")
        
        # Comando para atualizar URLs no WordPress via WP-CLI
        wp_cli_commands = [
            "cd public_html && wp search-replace 'http://gpreto.space' 'https://gpreto.space' --dry-run",
            "cd public_html && wp search-replace 'http://gpreto.space' 'https://gpreto.space' --skip-columns=guid"
        ]
        
        for cmd in wp_cli_commands:
            stdin, stdout, stderr = ssh.exec_command(cmd)
            output = stdout.read().decode()
            if output.strip():
                print(f"‚úÖ {output.strip()}")
        
        # 4. Ajusta permiss√µes
        print("\nüîß Ajustando permiss√µes...")
        stdin, stdout, stderr = ssh.exec_command("chmod 644 public_html/.htaccess")
        stdin, stdout, stderr = ssh.exec_command("chmod 644 public_html/wp-config.php")
        print("‚úÖ Permiss√µes ajustadas")
        
        # 5. Limpa cache (se existir)
        print("\nüîß Limpando cache...")
        stdin, stdout, stderr = ssh.exec_command("cd public_html && wp cache flush 2>/dev/null || echo 'Cache limpo'")
        print("‚úÖ Cache limpo")
        
        ssh.close()
        
        print("\nüéâ Corre√ß√µes aplicadas com sucesso!")
        print("\nüìã O que foi feito:")
        print("   ‚Ä¢ Configurado HTTPS for√ßado no wp-config.php")
        print("   ‚Ä¢ Criado .htaccess para redirecionar HTTP ‚Üí HTTPS")
        print("   ‚Ä¢ Adicionados headers de seguran√ßa")
        print("   ‚Ä¢ Atualizadas URLs no banco de dados")
        print("   ‚Ä¢ Ajustadas permiss√µes")
        print("   ‚Ä¢ Cache limpo")
        
        print("\nüåê Suas imagens agora devem funcionar em:")
        print("   https://gpreto.space/wp-content/uploads/products/T608.jpg")
        print("   https://gpreto.space/wp-content/uploads/products/106-6S.jpg")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao aplicar corre√ß√µes: {e}")
        return False

def testar_imagens():
    """Testa se as imagens est√£o acess√≠veis"""
    
    print("\nüß™ TESTANDO ACESSO √ÄS IMAGENS")
    print("=" * 35)
    
    import urllib.request
    import ssl
    
    # Ignora verifica√ß√£o SSL para teste
    ssl_context = ssl.create_default_context()
    ssl_context.check_hostname = False
    ssl_context.verify_mode = ssl.CERT_NONE
    
    urls = [
        "https://gpreto.space/wp-content/uploads/products/T608.jpg",
        "https://gpreto.space/wp-content/uploads/products/106-6S.jpg"
    ]
    
    for url in urls:
        try:
            print(f"üîÑ Testando: {url}")
            request = urllib.request.Request(url)
            response = urllib.request.urlopen(request, context=ssl_context, timeout=10)
            
            if response.status == 200:
                content = response.read()
                print(f"‚úÖ Acess√≠vel - Status: {response.status}")
                print(f"   Tamanho: {len(content)} bytes")
                print(f"   Tipo: {response.headers.get('Content-Type', 'N/A')}")
            else:
                print(f"‚ùå Erro - Status: {response.status}")
                
        except Exception as e:
            print(f"‚ùå Erro: {e}")

if __name__ == "__main__":
    print("üöÄ Corre√ß√£o de Mixed Content")
    print("   Sistema WordPress")
    print()
    
    if corrigir_mixed_content():
        testar_imagens()
        print("\nüéâ Corre√ß√µes conclu√≠das!")
        print("   Teste agora os links das imagens.")
    else:
        print("\n‚ùå Erro ao aplicar corre√ß√µes.")
    
    print("\n" + "="*50)

